# -*- coding: utf-8 -*-
"""fruitapp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kvLX8Or8UBaCHEUjc7QK7z83Kj_UKPeu
"""

import streamlit as st
import tensorflow as tf
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image
import numpy as np
import json
from PIL import Image

# ---- Load model and class indices ----
@st.cache_resource
def load_my_model():
    model = load_model("best_resnet50.keras")  # or best_resnet50.keras
    with open("class_indices.json") as f:
        class_indices = json.load(f)
    idx_to_class = {v: k for k, v in class_indices.items()}
    return model, idx_to_class

model, idx_to_class = load_my_model()

# ---- Streamlit UI ----
st.title("Fruit Image Classifier")
st.write("Upload a fruit image and the model will predict its class.")

uploaded_file = st.file_uploader("Upload an image", type=["jpg","png","jpeg"])

if uploaded_file is not None:
    img = Image.open(uploaded_file).convert("RGB")
    st.image(img, caption="Uploaded Image", use_container_width=True)

    # ---- Preprocess ----
    img = img.resize((100, 100))                    # same size as training
    x = image.img_to_array(img) / 255.0             # rescale
    x = np.expand_dims(x, axis=0)                   # add batch dimension

    # ---- Prediction ----
    probs = model.predict(x)[0]                     # softmax probabilities
    top_idx = np.argmax(probs)
    predicted_class = idx_to_class[top_idx]
    confidence = probs[top_idx]

    # ---- Show result ----
    st.subheader(f"Prediction: {predicted_class}")
    st.write(f"Confidence: {confidence*100:.2f}%")
